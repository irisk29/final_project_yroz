type PurchaseHistoryModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  date: AWSDate!
  amount: Float!
  userModel: UserModel @hasOne
  onlineStoreModel: OnlineStoreModel @hasOne
  physicalStoreModel: PhysicalStoreModel @hasOne
}

type UserModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  email: String!
  name: String!
  imageUrl: String
  creditCards: AWSJSON
  bankAccount: String
  storeOwnerModel: StoreOwnerModel @hasOne
  digitalWalletModel: DigitalWalletModel @hasOne
  shoppingBagModels: [ShoppingBagModel] @hasMany(indexName: "byUserModel", fields: ["id"])
}

type StoreOwnerModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  onlineStoreModel: OnlineStoreModel @hasOne
  physicalStoreModel: PhysicalStoreModel @hasOne
}

type ShoppingBagModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  productsAndQuantity: AWSJSON
  productModels: [ProductModel] @hasMany(indexName: "byShoppingBagModel", fields: ["id"])
  onlineStoreModel: OnlineStoreModel @hasOne
  usermodelID: ID! @index(name: "byUserModel")
}

type OnlineStoreModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  phoneNumber: AWSPhone!
  address: String!
  operationHours: AWSJSON!
  categories: AWSJSON!
  productModel: [ProductModel] @hasMany(indexName: "byOnlineStoreModel", fields: ["id"])
}

type PhysicalStoreModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  phoneNumber: AWSPhone!
  address: String!
  operationHours: AWSJSON!
  categories: AWSJSON!
  qrCode: String!
}

type ProductModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  categories: AWSJSON!
  price: Float!
  imageUrl: String
  description: String
  onlinestoremodelID: ID! @index(name: "byOnlineStoreModel")
  shoppingbagmodelID: ID! @index(name: "byShoppingBagModel")
}

type DigitalWalletModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  cashBackAmount: Float!
}
 